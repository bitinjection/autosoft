{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/ensureModuleLoadedOnceGuard.ts","webpack:///src/app/core/services/data.service.ts","webpack:///src/app/core/services/tax-calculator.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/logo/logo.component.ts","webpack:///src/app/logo/logo.component.html","webpack:///src/app/tax-input/tax-input.component.ts","webpack:///src/app/tax-input/tax-input.component.html","webpack:///src/app/tax-page/tax-page.component.ts","webpack:///src/app/tax-page/tax-page.component.html","webpack:///src/app/tax-results/tax-results.component.ts","webpack:///src/app/tax-results/tax-results.component.html","webpack:///src/app/zipcode-utility.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","components","forRoot","imports","AppComponent","selector","template","AppModule","declarations","bootstrap","CoreModule","parentModule","EnsureModuleLoadedOnceGuard","targetModule","constructor","name","DataService","http","url","get","pipe","res","handleError","error","console","errMessage","message","providedIn","TaxCalculatorService","income","state","isMonthly","incomeAsNumber","adjustedIncome","server","HomeComponent","dataService","getMessage","subscribe","templateUrl","LogoComponent","styleUrls","TaxInputComponent","taxInformation","zipcode","shouldActivate","isAllInputValid","emit","emitInputInfo","zip","i","s","test","isOnlyNumeric","length","isZipcodeValid","isIncomeValid","zipcodeChanged","incomeChanged","monthlyToggled","TaxPageComponent","taxCalculatorService","displayResult","toggleCalculateButton$","info","shouldActivateCalculate","next","calculateTax","tax","taxResultsComponent","tax$","displayResults$","activateButton","TaxResultsComponent","plan","v","toFixed","getState","zipString","log","parseInt","st","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: '/home' },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: '**', redirectTo: '/home' } \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {\r\n    static components = [ HomeComponent ];\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({ \r\n  selector: 'app-root',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `\r\n})\r\nexport class AppComponent {\r\n  \r\n  constructor() {\r\n\r\n  }\r\n  \r\n}","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { TaxPageComponent } from './tax-page/tax-page.component';\r\nimport { LogoComponent } from './logo/logo.component';\r\nimport { TaxInputComponent } from './tax-input/tax-input.component';\r\nimport { TaxResultsComponent } from './tax-results/tax-results.component';\r\n\r\n@NgModule({\r\n  imports:      [ BrowserModule, AppRoutingModule, CoreModule ],\r\n  declarations: [ AppComponent, AppRoutingModule.components, TaxPageComponent, LogoComponent, TaxInputComponent, TaxResultsComponent ],\r\n  bootstrap:    [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { EnsureModuleLoadedOnceGuard } from './ensureModuleLoadedOnceGuard';\r\n\r\n@NgModule({\r\n    imports: [ CommonModule, HttpClientModule ]\r\n})\r\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    //Ensure that CoreModule is only loaded into AppModule\r\n\r\n    //Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\r\n    constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\r\n        super(parentModule);\r\n    }\r\n}","export class EnsureModuleLoadedOnceGuard {\r\n\r\n    constructor(targetModule: any) {\r\n        if (targetModule) {\r\n            throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\r\n        }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService {\r\n    url = '/api/messages';\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getMessage() : Observable<string> {\r\n        return this.http.get<string>(this.url)\r\n            .pipe(\r\n                map(res => res['data']),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        console.error('Server error:', error);\r\n        if (error.error instanceof Error) {\r\n            const errMessage = error.error.message;\r\n            return Observable.throw(errMessage);\r\n        }\r\n        return Observable.throw(error || 'Server error');\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaxCalculatorService {\n\n  constructor(private http: HttpClient) { }\n\n  public calculateTax(income: string, state: string, isMonthly: boolean) {\n    const incomeAsNumber = +income;\n    const adjustedIncome = isMonthly ? incomeAsNumber * 12 : incomeAsNumber;\n\n    return this.http.get(`${environment.server}taxcalculator/income/${adjustedIncome}/state/${state}/`) as Observable<{ tax: number, plan: string }>\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../core/services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    message: string;\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.message = \"bah\";\r\n        this.dataService.getMessage().subscribe((message: string) => {\r\n            this.message = message + \" shamalama ding dong!\";\r\n        })\r\n    }\r\n}","<app-logo></app-logo>\r\n<app-tax-page></app-tax-page>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css']\n})\nexport class LogoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"logo\">\n    <img src=\"images/cheesylogo.png\">\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-tax-input',\n  templateUrl: './tax-input.component.html',\n  styleUrls: ['./tax-input.component.css']\n})\nexport class TaxInputComponent implements OnInit {\n\n  @Output() taxInformation = new EventEmitter<{ shouldActivate: boolean, income: string, zipcode: string, isMonthly: boolean }>();\n\n  public isMonthly = false;\n  public zipcode: string = '';\n  public income: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  private emitInputInfo() {\n    const shouldActivate = this.isAllInputValid();\n    const income = this.income;\n    const zipcode = this.zipcode;\n    const isMonthly = this.isMonthly;\n\n    this.taxInformation.emit({ shouldActivate, income, zipcode, isMonthly });\n  }\n\n  public monthlyToggled(isMonthly: boolean) {\n    this.isMonthly = isMonthly;\n    this.emitInputInfo();\n  }\n\n  public zipcodeChanged(zip: string) {\n    this.zipcode = zip;\n    this.emitInputInfo();\n  }\n\n  public incomeChanged(i: string) {\n    this.income = i;\n    this.emitInputInfo();\n  }\n\n  public isOnlyNumeric(s: string) {\n    return /^\\d+$/.test(s);\n  }\n\n  public isIncomeValid(i: string) {\n    return this.isOnlyNumeric(i);\n  }\n\n  public isZipcodeValid(zip: string) {\n    return zip.length === 5 && this.isOnlyNumeric(zip);\n  }\n\n  public isAllInputValid() {\n    return this.isZipcodeValid(this.zipcode) && this.isIncomeValid(this.income);\n  }\n\n}\n","<div class=\"label\">\n    Zip code\n</div>\n<div class=\"input-container\">\n    <input (input)=\"zipcodeChanged($event.target.value)\" type=\"text\" class=\"text-input\" placeholder=\"Zipcode\" maxlength=\"5\">\n</div>\n<div class=\"label\">\n    Income\n</div>\n<div class=\"input-container\">\n    <input (input)=\"incomeChanged($event.target.value)\" type=\"text\" class=\"text-input\" placeholder=\"Income\" maxlength=\"15\">\n</div>\n<div class=\"checkbox-container\">\n    <input class=\"checkbox-input\" type=\"checkbox\" (change)=\"monthlyToggled($event.target.checked)\"><span>Monthly income specified</span>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { TaxCalculatorService } from '../core/services/tax-calculator.service';\nimport { TaxResultsComponent } from '../tax-results/tax-results.component';\nimport { getState } from '../zipcode-utility';\n\n@Component({\n  selector: 'app-tax-page',\n  templateUrl: './tax-page.component.html',\n  styleUrls: ['./tax-page.component.css']\n})\nexport class TaxPageComponent implements OnInit {\n\n  public displayResult = false;\n  public toggleCalculateButton$ = new Subject<boolean>();\n\n  public income: string = '';\n  public state: string = '';\n  public isMonthly: boolean = false;\n\n  @ViewChild('taxresults') taxResultsComponent!: TaxResultsComponent;\n\n  constructor(private taxCalculatorService: TaxCalculatorService) { }\n\n  ngOnInit(): void { }\n\n  // Copy/pasted from https://stackoverflow.com/questions/28821804/how-can-i-quickly-determine-the-state-for-a-given-zipcode\n  public activateButton(info : { shouldActivate: boolean, income: string, zipcode: string, isMonthly: boolean }) {\n    const state = getState(info.zipcode);\n    const shouldActivateCalculate = info.shouldActivate && state !== 'none';\n\n    this.income = info.income;\n    this.state = state;\n    this.isMonthly = info.isMonthly;\n\n    this.toggleCalculateButton$.next(shouldActivateCalculate);\n  }\n\n  public calculateTax() {\n    this.taxCalculatorService.calculateTax(this.income, this.state, this.isMonthly)\n      .pipe(\n        tap(tax => this.taxResultsComponent.tax$.next(tax)),\n        tap(() => this.taxResultsComponent.displayResults$.next(true))\n      ).subscribe();\n  }\n}\n","<div class=\"outline resize\">\n    <div class=\"row\">\n        <div class=\"column\">\n            <app-tax-input (taxInformation)='activateButton($event)'></app-tax-input>\n        </div>\n        <div class=\"column\">\n            <app-tax-results #taxresults></app-tax-results>\n        </div>\n    </div>\n    <div class=\"calculate-row\">\n        <button class=\"calculate-button\" (click)=\"calculateTax()\" [disabled]=\"!(toggleCalculateButton$ | async)\">Calculate</button>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-tax-results',\n  templateUrl: './tax-results.component.html',\n  styleUrls: ['./tax-results.component.css']\n})\nexport class TaxResultsComponent implements OnInit {\n\n  public displayResults$ = new Subject<boolean>();\n  public tax$ = new Subject<{ tax: number, plan: string }>();\n  public tax = '';\n  public plan = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.tax$.subscribe(v => {\n      this.tax = v.tax.toFixed(2);\n      this.plan = v.plan;\n    });\n    this.displayResults$.next(false);\n  }\n\n  public calculateTax() {\n    this.displayResults$.next(true);\n  }\n\n\n}\n","<div class=\"results-container\">\n    <div *ngIf=\"displayResults$ | async; else placeholder\">\n        <div class=\"label\">You owe</div>\n        <div class=\"tax-amount-container\">\n            <span class=\"tax-amount-label\">{{ tax }}</span>\n            <span class=\"currency-label\">USD</span>\n        </div>\n        <div class=\"method-label\">{{ plan }}</div>\n        <div class=\"method-label blink sarcastic\">Congrats!!</div>\n    </div>\n    <ng-template #placeholder>\n        <div>\n            <img src=\"images/unclesam.jpg\" class=\"unclesam\">\n        </div>\n    </ng-template>\n</div>","\r\nexport function getState(zipString: string): string {\r\n\r\n    /* Ensure we have exactly 5 characters to parse */\r\n    if (zipString.length !== 5) {\r\n        console.log('Must pass a 5-digit zipcode.');\r\n        return;\r\n    }\r\n\r\n    /* Ensure we don't parse strings starting with 0 as octal values */\r\n    const zipcode = parseInt(zipString, 10);\r\n\r\n    let st;\r\n    let state;\r\n\r\n    /* Code cases alphabetized by state */\r\n    if (zipcode >= 35000 && zipcode <= 36999) {\r\n        st = 'AL';\r\n        state = 'Alabama';\r\n    } else if (zipcode >= 99500 && zipcode <= 99999) {\r\n        st = 'AK';\r\n        state = 'Alaska';\r\n    } else if (zipcode >= 85000 && zipcode <= 86999) {\r\n        st = 'AZ';\r\n        state = 'Arizona';\r\n    } else if (zipcode >= 71600 && zipcode <= 72999) {\r\n        st = 'AR';\r\n        state = 'Arkansas';\r\n    } else if (zipcode >= 90000 && zipcode <= 96699) {\r\n        st = 'CA';\r\n        state = 'California';\r\n    } else if (zipcode >= 80000 && zipcode <= 81999) {\r\n        st = 'CO';\r\n        state = 'Colorado';\r\n    } else if ((zipcode >= 6000 && zipcode <= 6389) || (zipcode >= 6391 && zipcode <= 6999)) {\r\n        st = 'CT';\r\n        state = 'Connecticut';\r\n    } else if (zipcode >= 19700 && zipcode <= 19999) {\r\n        st = 'DE';\r\n        state = 'Delaware';\r\n    } else if (zipcode >= 32000 && zipcode <= 34999) {\r\n        st = 'FL';\r\n        state = 'Florida';\r\n    } else if ((zipcode >= 30000 && zipcode <= 31999) || (zipcode >= 39800 && zipcode <= 39999)) {\r\n        st = 'GA';\r\n        state = 'Georgia';\r\n    } else if (zipcode >= 96700 && zipcode <= 96999) {\r\n        st = 'HI';\r\n        state = 'Hawaii';\r\n    } else if (zipcode >= 83200 && zipcode <= 83999) {\r\n        st = 'ID';\r\n        state = 'Idaho';\r\n    } else if (zipcode >= 60000 && zipcode <= 62999) {\r\n        st = 'IL';\r\n        state = 'Illinois';\r\n    } else if (zipcode >= 46000 && zipcode <= 47999) {\r\n        st = 'IN';\r\n        state = 'Indiana';\r\n    } else if (zipcode >= 50000 && zipcode <= 52999) {\r\n        st = 'IA';\r\n        state = 'Iowa';\r\n    } else if (zipcode >= 66000 && zipcode <= 67999) {\r\n        st = 'KS';\r\n        state = 'Kansas';\r\n    } else if (zipcode >= 40000 && zipcode <= 42999) {\r\n        st = 'KY';\r\n        state = 'Kentucky';\r\n    } else if (zipcode >= 70000 && zipcode <= 71599) {\r\n        st = 'LA';\r\n        state = 'Louisiana';\r\n    } else if (zipcode >= 3900 && zipcode <= 4999) {\r\n        st = 'ME';\r\n        state = 'Maine';\r\n    } else if (zipcode >= 20600 && zipcode <= 21999) {\r\n        st = 'MD';\r\n        state = 'Maryland';\r\n    } else if ((zipcode >= 1000 && zipcode <= 2799) || (zipcode == 5501) || (zipcode == 5544)) {\r\n        st = 'MA';\r\n        state = 'Massachusetts';\r\n    } else if (zipcode >= 48000 && zipcode <= 49999) {\r\n        st = 'MI';\r\n        state = 'Michigan';\r\n    } else if (zipcode >= 55000 && zipcode <= 56899) {\r\n        st = 'MN';\r\n        state = 'Minnesota';\r\n    } else if (zipcode >= 38600 && zipcode <= 39999) {\r\n        st = 'MS';\r\n        state = 'Mississippi';\r\n    } else if (zipcode >= 63000 && zipcode <= 65999) {\r\n        st = 'MO';\r\n        state = 'Missouri';\r\n    } else if (zipcode >= 59000 && zipcode <= 59999) {\r\n        st = 'MT';\r\n        state = 'Montana';\r\n    } else if (zipcode >= 27000 && zipcode <= 28999) {\r\n        st = 'NC';\r\n        state = 'North Carolina';\r\n    } else if (zipcode >= 58000 && zipcode <= 58999) {\r\n        st = 'ND';\r\n        state = 'North Dakota';\r\n    } else if (zipcode >= 68000 && zipcode <= 69999) {\r\n        st = 'NE';\r\n        state = 'Nebraska';\r\n    } else if (zipcode >= 88900 && zipcode <= 89999) {\r\n        st = 'NV';\r\n        state = 'Nevada';\r\n    } else if (zipcode >= 3000 && zipcode <= 3899) {\r\n        st = 'NH';\r\n        state = 'New Hampshire';\r\n    } else if (zipcode >= 7000 && zipcode <= 8999) {\r\n        st = 'NJ';\r\n        state = 'New Jersey';\r\n    } else if (zipcode >= 87000 && zipcode <= 88499) {\r\n        st = 'NM';\r\n        state = 'New Mexico';\r\n    } else if ((zipcode >= 10000 && zipcode <= 14999) || (zipcode == 6390) || (zipcode == 501) || (zipcode == 544)) {\r\n        st = 'NY';\r\n        state = 'New York';\r\n    } else if (zipcode >= 43000 && zipcode <= 45999) {\r\n        st = 'OH';\r\n        state = 'Ohio';\r\n    } else if ((zipcode >= 73000 && zipcode <= 73199) || (zipcode >= 73400 && zipcode <= 74999)) {\r\n        st = 'OK';\r\n        state = 'Oklahoma';\r\n    } else if (zipcode >= 97000 && zipcode <= 97999) {\r\n        st = 'OR';\r\n        state = 'Oregon';\r\n    } else if (zipcode >= 15000 && zipcode <= 19699) {\r\n        st = 'PA';\r\n        state = 'Pennsylvania';\r\n    } else if (zipcode >= 300 && zipcode <= 999) {\r\n        st = 'PR';\r\n        state = 'Puerto Rico';\r\n    } else if (zipcode >= 2800 && zipcode <= 2999) {\r\n        st = 'RI';\r\n        state = 'Rhode Island';\r\n    } else if (zipcode >= 29000 && zipcode <= 29999) {\r\n        st = 'SC';\r\n        state = 'South Carolina';\r\n    } else if (zipcode >= 57000 && zipcode <= 57999) {\r\n        st = 'SD';\r\n        state = 'South Dakota';\r\n    } else if (zipcode >= 37000 && zipcode <= 38599) {\r\n        st = 'TN';\r\n        state = 'Tennessee';\r\n    } else if ((zipcode >= 75000 && zipcode <= 79999) || (zipcode >= 73301 && zipcode <= 73399) || (zipcode >= 88500 && zipcode <= 88599)) {\r\n        st = 'TX';\r\n        state = 'Texas';\r\n    } else if (zipcode >= 84000 && zipcode <= 84999) {\r\n        st = 'UT';\r\n        state = 'Utah';\r\n    } else if (zipcode >= 5000 && zipcode <= 5999) {\r\n        st = 'VT';\r\n        state = 'Vermont';\r\n    } else if ((zipcode >= 20100 && zipcode <= 20199) || (zipcode >= 22000 && zipcode <= 24699) || (zipcode == 20598)) {\r\n        st = 'VA';\r\n        state = 'Virginia';\r\n    } else if ((zipcode >= 20000 && zipcode <= 20099) || (zipcode >= 20200 && zipcode <= 20599) || (zipcode >= 56900 && zipcode <= 56999)) {\r\n        st = 'DC';\r\n        state = 'Washington DC';\r\n    } else if (zipcode >= 98000 && zipcode <= 99499) {\r\n        st = 'WA';\r\n        state = 'Washington';\r\n    } else if (zipcode >= 24700 && zipcode <= 26999) {\r\n        st = 'WV';\r\n        state = 'West Virginia';\r\n    } else if (zipcode >= 53000 && zipcode <= 54999) {\r\n        st = 'WI';\r\n        state = 'Wisconsin';\r\n    } else if (zipcode >= 82000 && zipcode <= 83199) {\r\n        st = 'WY';\r\n        state = 'Wyoming';\r\n    } else {\r\n        st = 'none';\r\n        state = 'none';\r\n        console.log('No state found matching', zipcode);\r\n    }\r\n\r\n    return state;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  server: 'http://localhost:5000/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}